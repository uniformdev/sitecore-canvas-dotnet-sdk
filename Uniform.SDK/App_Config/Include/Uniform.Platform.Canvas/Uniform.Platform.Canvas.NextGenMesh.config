<configuration
  xmlns:set="http://www.sitecore.net/xmlconfig/set/"
  xmlns:role="http://www.sitecore.net/xmlconfig/role/"
  xmlns:patch="http://www.sitecore.net/xmlconfig/">

    <sitecore role:require="ContentManagement or Standalone">
       
      <settings>
        
          <!-- UNIFORM - CANVAS - PURGE - ENABLED
                Enables cache purge for Canvas data types.

                Default value: "true"
          -->
          <setting name="Uniform.Canvas.Purge.Enabled" value="true" />
          
          <!-- UNIFORM - CANVAS - PURGE - INCREMENTAL ENABLED
                Enables incremental cache purge for Canvas data types.

                Default value: "true"
          -->
          <setting name="Uniform.Canvas.Purge.Incremental.Enabled" value="true" />
      
          <!-- UNIFORM - CANVAS - PURGE - INCREMENTAL BATCH SIZE
                Defines the maximum number of data type payloads per purge request.
                Related to cache purge API limits.

                Default value: "20"
          -->
          <setting name="Uniform.Canvas.Purge.Incremental.BatchSize" value="20" />
      
          <!-- UNIFORM - CANVAS - PURGE - INCREMENTAL BATCH SIZE
                Defines the maximum number of conditions per data type payload.
                Related to cache purge API limits.

                Default value: "30"
          -->
          <setting name="Uniform.Canvas.Purge.Incremental.ConditionsLimit" value="30" />
      
          <!-- UNIFORM - CANVAS - PURGE - THROW ON FAIL
                Should failed purge throw an error and prevent next actions in publish pipeline (e.g. deploy).

                Default value: "true"
          -->
          <setting name="Uniform.Canvas.Purge.ThrowOnFail" value="true" />

          <!-- UNIFORM - CANVAS - PURGE - REQUEST TIMEOUT
                Defines the timeout when purging Canvas data types cache.

                Default value: "00:00:02"
            -->
          <setting name="Uniform.Canvas.Purge.RequestTimeout" value="00:00:02" />

      </settings>

      <uniform>
        <services>
          <defaultCanvasDataTypePurgeService type="Uniform.Services.CanvasDataTypePurgeService, Uniform.Platform.Canvas">
            <!--
              Enables incremental cache purge for Canvas data types.

              Default value: false
            -->            
            <incrementalEnabled>false</incrementalEnabled>

            <!--
              Defines the number of item events to be processed incrementally, otherwise purge all caches.

              Default value: 20000
            -->
            <incrementalEventsThreshold>20000</incrementalEventsThreshold>

            <!--
              Defines the number of unique items to be purged incrementally, otherwise purge all caches.

              Default value: 500
            -->
            <incrementalItemsThreshold>500</incrementalItemsThreshold>

            <!--
              Defines the maximum estimated number of incremental purge requests, otherwise purge all caches.

              Default value: 20
            -->
            <incrementalRequestsThreshold>20</incrementalRequestsThreshold>

            <purgeRules hint="raw:AddPurgeRule">
              <!--
                `rootPath`
                Filter items by path. Use '*' to process any item
                
                `templateId`
                Filter items by template ID. Skip to process any template
                
                `action`
                Predefined action for matched items
                Supported values: 'skip', 'full', 'fullpurge', 'purge'
                
                `type`
                Custom implementation of `Uniform.NextGenMesh.ICanvasPurgeRule`
                
                Required attributes:
                  - `rootPath`
                  - `type` or `action`
              -->
              <templates rootPath="/sitecore/templates/" action="skip" />
              <!--<skipSchedules rootPath="/sitecore/system/" templateId="{70244923-FA84-477C-8CBD-62F39642C42B}" action="skip" />-->
              <system rootPath="/sitecore/system/" action="skip" />
              <layouts rootPath="/sitecore/layout/" action="skip" />
              <!--<mediaLibrary rootPath="/sitecore/media library/" action="skip" />-->

              <!--<custom rootPath="*" type="Uniform.NextGenMesh.ICanvasPurgeRule_IMPLEMENTATION, Uniform.Platform.Canvas" />-->
            </purgeRules>
            <!--
              <apiKey>UNIFORM-API-KEY</apiKey>
              <apiHost>UNIFORM-API-HOST</apiHost>
              <edgeApiHost>UNIFORM-EDGE-API-HOST</edgeApiHost>
              <projectId>UNIFORM-PROJECT-ID</projectId>
              -->
          </defaultCanvasDataTypePurgeService>

          <canvasDataTypePurgeService ref="uniform/services/defaultCanvasDataTypePurgeService" />
        </services>
      </uniform>

      <pipelines>
        <publish>
          <processor
            patch:after="processor[@type='Uniform.Pipelines.Publish.TriggerDeployment, Uniform.Deployment.Core']"
            type="Uniform.Pipelines.Publish.TriggerCanvasDataTypesCachePurge, Uniform.Platform.Canvas"
          />
        </publish>
      </pipelines>

      <pipelines>
        <group name="uniform" groupName="uniform">
          <pipelines>
            <canvas.dataTypesCachePurge>

              <processor type="Uniform.Pipelines.DataTypesCachePurge.EnsurePurgeEnabled, Uniform.Platform.Canvas" />

              <processor type="Uniform.Pipelines.DataTypesCachePurge.EnsureIncrementalPurgeEnabled, Uniform.Platform.Canvas" />

              <processor type="Uniform.Pipelines.DataTypesCachePurge.ResolveLastPurgeDate, Uniform.Platform.Canvas" />

              <processor type="Uniform.Pipelines.DataTypesCachePurge.ResolvePurgeCandidates, Uniform.Platform.Canvas" />

              <processor type="Uniform.Pipelines.DataTypesCachePurge.PurgeCache, Uniform.Platform.Canvas" />

              <processor type="Uniform.Pipelines.DataTypesCachePurge.SaveLastPurgeDate, Uniform.Platform.Canvas" />

            </canvas.dataTypesCachePurge>
          </pipelines>
        </group>
      </pipelines>

    </sitecore>
</configuration>
